# لیستها برای ذخیره چندین مقدار در یک متغیر استفاده میشن
# لیست ها یکی از 4 نوع داده ای پایتون هستن
#  که برای ذخیره مجموعه ای از مقادیر استفاده میشن
# سه نوع دیگه ---> Tuple, Set, Dictionary

# [] لیست ها با
# ساخته میشن

thislist = ["apple", "banana", "cherry", "apple"]
print(thislist)

# اعضای لیست مرتب شده، قابل تغییر و مجاز برای تکرار هستن
# اعضای لیست ایندکس دارن
# اولین عضو ایندکس صفر ، دومین عضو اندکس 1 و الی آخر

# مرتب شده
# ---------
# وقتی میگم مرتب شده یعنی اعضا یه به عبارتی ایتم های یه لیست
# یه ترتیبی دارن که تا ما خودمون
# از طریق متد هایی این ترتیب رو تغییر ندیم، خودش تغییر نمیکنه
# واگر یه ایتم جدیدی به لیست اضافه کنیم، عضو جدید به آخر
# لیست اضافه میشه

# قابل تغییر
# --------

# وقتی میگم قابل تغییر، یعنی اعضای یه لیست رو
# بعد از ساختن لیست میشه پاک کرد ، میشه با مقدار دیگه ای جایگزین
# ویا اضافه کرد

# مجاز برای تکرار
# ------------
# از اونجایی که لیست ایندکس شده،
# یعنی هر ایتم جایگاه مشخص و منحصر به فردی داره
# در نتیجه لیست میتونه اعضا با مقدار مشابه هم داشته باشه
# ---------|   0         1        2         3        4    |
thislist = ["apple", "banana", "cherry", "apple", "cherry"]
print(thislist)

# استفاده میکنیم len واسه اینکه بفهمیم یه لیست چنتا ایتم یا عضو داره از فانکشن
thislist = ["apple", "banana", "cherry"]
print(len(thislist))  # ---> 3

# اعضای یه لیست می تونه از هر نوع داده ای باشه
list1 = ["abc", 34, True, 40, "yasharhabibimedia"]

# از دید پایتون لیست ها به عنوان اشیاء ی با نوع داده لیست تعریف میشن
# <class 'list'>

mylist = ["apple", "banana", "cherry"]
print(type(mylist))  # ---> <class 'list'>
#---------------------------------------------------------------------------
# دسترسی به اعضای یه لیست
# اعضای لیست ایندکس گذاری میشن
# و میشه از طریق همین ایندکس بهشون دسترسی داشت

# توجه داشته باشید که ایتم اول ایندکسش صفره
# ---------|   0        1          2   |
thislist = ["apple", "banana", "cherry"]
print(thislist[1])  # --> banana
#---------------------------------------------------------------------------
# شاخص گذاری منفی
# ایندکس منفی یعنی از آخر شروع کن
# -1 --> به ایتم آخر لیست ارجاع میکنه

thislist = ["apple", "banana", "cherry"]
print(thislist[-1])  # --> cherry
#---------------------------------------------------------------------------
# میشه یه بازه از ایندکس ها تعیین کرد به این صورت که مشخص کنیم
# لیست از چه ایندکسی شروع میشه و تو چه ایندکسی تموم میشه
# وقتی یه بازه اختصاص میدیم مقدار برگشتی یه لیست جدید
# با ایتم های توی اون بازه هست

# لیست با ایتمی که ایندکسش 2 هست شروع میشه و با ایتمی که ایندکس 4 هست تموم میشه
# توجه کنید گفتم ایتمی که ایندکسش هست 4 نه 5
# یعنی وقتی میگیم 2:5 یعنی ایتم ایندکس 2 شماملش میشه ولی ایتم ایندکس 5 شاملش نمیشه
thislist = ["apple", "banana", "cherry", "orange", "kiwi", "melon", "mango"]
print(thislist[2:5])  # ---> ['cherry', 'orange', 'kiwi']
#---------------------------------------------------------------------------
# با کنار گذاشتن مقدار ابتدای بازه، بازه از ایتم اول یعنی اینکس صفر شروع میشه

# ---------|   0         1        2         3        4        5        6   |
thislist = ["apple", "banana", "cherry", "orange", "kiwi", "melon", "mango"]

print(thislist[:4]) # ----> ['apple', 'banana', 'cherry', 'orange']

#---------------------------------------------------------------------------
# با کنار گذاشتن مقدار انتهای بازه، بازه تا آخر لیست ادامه پیدا میکنه

# ---------|   0         1        2         3        4        5        6   |
thislist = ["apple", "banana", "cherry", "orange", "kiwi", "melon", "mango"]

print(thislist[2:]) # ---> ['cherry', 'orange', 'kiwi', 'melon', 'mango']

#---------------------------------------------------------------------------
# بررسی اینکه ایتمی تو لیست وجود داره یا نه
# استفاده میکنیم in برای اینکه بررسی کنیم ایتمی تو یه لیست هست یا نه از عملگر 

thislist = ["apple", "banana", "cherry"]
if "apple" in thislist:
  print("Yes, 'apple' is in the fruits list") 